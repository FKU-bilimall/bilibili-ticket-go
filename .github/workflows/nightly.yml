# .github/workflows/nightly.yml
name: nightly

on:
  push:
    branches:
      - "master"

jobs:
  rust:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: macos-latest
            target: x86_64-apple-darwin

          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: 'recursive'
          repository: 'FKU-bilimall/biliTicker_gt'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build with cargo
        run: cargo build --target ${{ matrix.target }} --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/*.so
            target/${{ matrix.target }}/release/*.dll
            target/${{ matrix.target }}/release/*.dylib

      - name: Upload bindings.h
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        uses: actions/upload-artifact@v4
        with:
          name: bindings.h
          path: bindings.h

  go:
    strategy:
      matrix:
        targets: [x86_64-unknown-linux-gnu,x86_64-apple-darwin,x86_64-pc-windows-msvc]

    needs:
      - rust
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Rust Build Artifacts
        uses: actions/download-artifact@v5
        with:
          path: captcha/biliTicker/target/${{ matrix.targets }}/release
          pattern: ${{ matrix.targets }}
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R captcha/biliTicker/target/${{ matrix.targets }}/release

      - name: Download bindings.h
        uses: actions/download-artifact@v5
        with:
          path: captcha/biliTicker
          pattern: bindings.h

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: stable

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          args: --snapshot --clean

      - name: Publish Nightly
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "nightly"
          draft: false
          prerelease: true
          title: "Nightly updates"
          files: |
            dist/*.zip
            dist/checksums.txt
